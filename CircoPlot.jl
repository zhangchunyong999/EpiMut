# EpiMut - CircoPlot.jl
#
# Copyright (C) Chunyong Zhang
# Contact: Chunyong Zhang <zhangchunyong@tmu.edu.cn>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

using Getopt
function runcgmaptools(bam,fa,chr,start,final,name,outputfile)
    cgmaptools=Sys.which("cgmaptools")
    samtools=Sys.which("samtools")
    run(`$cgmaptools tanghulu -r $fa -b $bam  -s $samtools -l $chr:$start-$final -t CG -o $outputfile/$name.pdf`)
end
function Argparse()
    lst = Dict{String,String}()
    for (opt, arg) in getopt(ARGS, "hb:g:c:s:e:n:o:", ["help","bamfile=","genomefile=","chr=","start=","end=","name=","outputfile="])
        opt = replace(opt, "-" => "")
        arg = replace(arg, "=" => "")
        if opt == "help" || opt == "h"
            println("""
DESCRPTION      This program is for drawing circle plot using cgmaptools tanghulu after differential analysis.
                Make sure your CGmaptools and SAMtools were installed. We try to search your CGmaptools and SAMtools.

USAGE           julia CircoPlot.jl [options] -b <in.bam> -g <in.fa> -c <chr> -s <start> -e <end> -n <outputname> -o <outputfile>

                    options
                    -h      --help              Show this message
                    -b      --bamfile           Input your BAM file, should be in the same file as the bai (generated by samtools index).
                    -g      --genomefile        Input your genome file, should be in the same file as the fai (generated by samtools faidx).
                    -c      --chr               Chromosome name. eg. chr1
                    -s      --start             Start position. eg. 2000
                    -e      --end               End position. eg. 4000
                    -n      --name              Input output name, stored as a pdf format.
                    -o      --outputfile        Input output file path.

AUTHOR
                    Contact:     Chunyong Zhang; zhangchunyong@tmu.edu.cn
""")
        elseif opt == "bamfile" || opt == "b"
            lst["bamfile"] = arg
        elseif opt == "genomefile" || opt == "g"
            lst["genomefile"] = arg
        elseif opt == "chr" || opt == "c"
            lst["chr"] = arg
        elseif opt == "start" || opt == "s"
            lst["start"] = arg
        elseif opt == "end" || opt == "e"
            lst["end"] = arg
        elseif opt == "name" || opt == "n"
            lst["name"] = arg
        elseif opt == "outputfile" || opt == "o"
            lst["outputfile"] = arg
        else
            println("Please check your parameter!")
        end
    end
    lst
end

args = Argparse()
if length(args) > 1
    runcgmaptools(args["bamfile"],args["genomefile"],args["chr"],parse(Int,args["start"]),parse(Int,args["end"]),args["name"],args["outputfile"])
end
